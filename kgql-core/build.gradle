repositories {
//    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
}

apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'maven-publish'

kotlin {
    sourceSets {
        commonMain {
            dependencies {
                implementation deps.kotlin.stdlib.common
                api deps.kotlin.serialization.common
            }
        }
        commonTest {
            dependencies {
                implementation deps.kotlin.test.common
                implementation deps.kotlin.test.commonAnnotations
            }
        }
        jvmMain {
            dependencies {
                implementation deps.kotlin.stdlib.jdk7
                api deps.kotlin.serialization.jvm
            }
        }
        jvmTest {
            dependencies {
                implementation deps.kotlin.test.jvm
                implementation deps.kotlin.test.junit
            }
        }
        jsMain {
            dependencies {
                implementation deps.kotlin.stdlib.js
                api deps.kotlin.serialization.js
            }
        }
        jsTest {
            dependencies {
                implementation deps.kotlin.test.js
            }
        }
        nativeMain {
            dependencies {
                api deps.kotlin.serialization.native
            }
        }
        nativeTest {
        }
    }

    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.js, 'js')
        fromPreset(presets.iosArm64, 'iosArm64') {
            compilations.main.outputKinds('FRAMEWORK')
        }
        fromPreset(presets.iosX64, 'iosX64') {
            compilations.main.outputKinds('FRAMEWORK')
        }
    }

    configure([targets.iosX64, targets.iosArm64]) {
        compilations.main.source(sourceSets.nativeMain)
        compilations.test.source(sourceSets.nativeTest)
    }

}

configurations {
    compileClasspath
}

afterEvaluate {
    // Alias the task names we use elsewhere to the new task names.
    tasks.create('install').dependsOn('publishKotlinMultiplatformPublicationToMavenLocal')
    tasks.create('installLocally') {
        dependsOn 'publishKotlinMultiplatformPublicationToTestRepository'
        dependsOn 'publishJvmPublicationToTestRepository'
        dependsOn 'publishJsPublicationToTestRepository'
    }
    tasks.create('installIosLocally') {
        dependsOn 'publishKotlinMultiplatformPublicationToTestRepository'
        dependsOn 'publishIosArm64PublicationToTestRepository'
        dependsOn 'publishIosX64PublicationToTestRepository'
    }
    // NOTE: We do not alias uploadArchives because CI runs it on Linux and we only want to run it on Mac OS.
    //tasks.create('uploadArchives').dependsOn('publishKotlinMultiplatformPublicationToMavenRepository')
}

apply from: "$rootDir/gradle/gradle-mvn-mpp-push.gradle"

publishing {
    publications.all {
        // Rewrite all artifacts from using the project name to just 'runtime'.
        artifactId = artifactId.replace(project.name, 'core')
    }
}
