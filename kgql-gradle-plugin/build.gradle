apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'java-gradle-plugin'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

gradlePlugin {
    plugins {
        kgql {
            id = "com.codingfeline.kgql"
            implementationClass = "com.codingfeline.kgql.gradle.KgqlPlugin"
        }
    }
}

configurations {
    fixtureClasspath
    bundled
}

// Append any extra dependencies to the test fixtures via a custom configuration classpath. This
// allows us to apply additional plugins in a fixture while still leveraging dependency resolution
// and de-duplication semantics.
tasks.getByName('pluginUnderTestMetadata').
        getPluginClasspath().
        from(configurations.fixtureClasspath)
//tasks.getByName('pluginUnderTestMetadata')
//        .setPluginClasspath(
//        tasks.getByName('pluginUnderTestMetadata')
//                .getPluginClasspath().plus(configurations.fixtureClasspath)
//)


dependencies {
    implementation project(':kgql-compiler')
    implementation deps.kotlin.stdlib.jdk8

    compileOnly gradleApi()
    implementation deps.plugins.kotlin
    implementation deps.plugins.android


    testImplementation deps.junit
    testImplementation deps.truth

    fixtureClasspath deps.plugins.kotlin
    fixtureClasspath deps.plugins.android
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
